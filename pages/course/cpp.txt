.. title: CPP برنامه نویسی پیشرفته
.. slug: cpp
.. date: 2015-08-12 10:55:52 UTC+04:30
.. tags:
.. category:
.. link:
.. description:
.. type: text

فهرست کتاب‌های پیشنهادی برای ++C
===================================================================================================
.. class:: yoosofan-change-ltr

    * `C++ from the Ground Up   / Herbert Schildt / McGraw-Hill/Osborne (Third Edition 2003) <http://www.herbschildt.com>`_
    * `Programming principles and practice using C++ / Bjarne Stroustrup / Pearson education 2008) <http://www.pearsonhighered.com/educator/product/Programming-Principles-and-Practice-Using-C/9780321543721.page>`_
    * `The C++ Programming Language / Bjarne Stroustrup / Addison-Wesley (Third Edition 1997) <http://www2.research.att.com/~bs/3rd.html>`_
    * `Programming with Objects: A Comparative Presentation of Object-Oriented Programming with C++ and Java /  Avinash C. Kak  / John Wiley & Sons (2003 ) <http://eu.wiley.com/WileyCDA/WileyTitle/productCd-0471268526.html>`_
    * `Thinking in C++ / Bruce Eckel / Second edition 2000 <http://www.mindview.net/Books/TICPP/ThinkingInCPP2e.html>`_


Online edit, compile, and run
==============================================================================

* `<http://www.tutorialspoint.com/compile_c_online.php>`_
* `<http://cpp.sh/>`_
* https://godbolt.org , https://github.com/compiler-explorer
* https://cppinsights.io
* `<http://codepad.org/>`_
* `<https://www.jdoodle.com/c-online-compiler>`_
* `<http://ideone.com>`_
* `<https://www.codechef.com/ide>`_
* `<http://webcompiler.cloudapp.net/>`_
* `<https://codepad.remoteinterview.io/GladnessUrgentCactusCostume>`_
* `<http://www.onlinecompiler.net/>`_
* `<http://getprogramcode.com/compiler/compile-c-programs-online.html>`_
* `<http://coliru.stacked-crooked.com/>`_
* `<https://ide.geeksforgeeks.org/>`_
* `<https://www.onlinegdb.com/online_c_compiler>`_
* `<https://www.remoteinterview.io/online-c-compiler>`_
* `<http://www.compileonline.com/compile_c_online.php>`_
* `<https://www.codechef.com/ide>`_
* `<https://www.beta.browxy.com/>`_
* `<http://cpp.sh/>`_
* `<compiler.run>`_

Compilers
==============================================================================

در این بخش فهرست تعدادی از کامپایلرهای مناسب برای انجام تمرین‌ها و پروژه‌های درسی آورده شده است.

*  `gcc <http://gcc.gnu.org>`_ :  مشهورترین کامپایلر متن باز و رایگان است که بر روی سیستم عامل‌های گوناگون می‌تواند نصب شود و اغلب به صورت پیش فرض در انواع لینوکس‌ها نصب شده است. در `orwelldevcpp`_ ، `codeblocks`_ و `devcpp`_  گذاشته شده است و به سادگی می‌توان با آن کار کرد.    برای کار به صورت خط فرمان در ویندوز  `mingw <http://www.mingw.org>`_ و `cygwin <http://cygwin.com>`_  ساخته شده است.
*  `clang <https://clang.llvm.org/>`_
*  `digitalmars <http://www.digitalmars.com/download/freecompiler.html>`_
*  `djgpp (for DOS) <http://www.delorie.com/djgpp/>`_
*  `pcc <http://pcc.ludd.ltu.se>`_
*  `open watcom <http://www.openwatcom.org/index.php/Main_Page>`_
*  `Amsterdam Compiler Kit <http://tack.sourceforge.net>`_
*  `open64 <http://www.open64.net>`_
*  `Borland Cpp 5.5 <http://forms.embarcadero.com/forms/BCC32CompilerDownload>`_

List of compilers

*  `<https://en.wikipedia.org/wiki/List_of_compilers#C_compilers>`_

Windows

Pre-Built Binaries:

https://releases.llvm.org/download.html

https://github.com/llvm/llvm-project/releases/


Editors
==============================================================================

*  `geany <http://www.geany.org>`_ : `نسخهٔ قابل حمل آن در ویندوز <http://portableapps.com/apps/development/geany_portable>`_
*  `notepadpp <http://www.notepad-plus-plus.org/>`_ :  این ویرایشگر فقط در ویندوز است ولی به دلیل این که از امکانات پایهٔ ویندوز کمک گرفته است به سادگی می‌تواند در wine در لینوکس نیز اجرا شود. نسخهٔ قابل حمل آن `notepadpp_portable <http://portableapps.com/apps/development/notepadpp_portable>`_ است.
*  `kate <http://kate-editor.org>`_


Integrated Development Environments (IDEs)
==============================================================================

یکی از مشکل‌هایی که اغلب برنامه نویسان در مبانی برنامه نویسی با آن روبرو هستند به کار بردن ابزارهایی است که بتواند کار آنها را ساده‌تر نماید و به سادگی بتوانند پروژه‌های خود را انجام دهند. البته گزینهٔ شخصی من برای نوشتن کدهای ساده به کار بردن ترکیب `geany`_ به عنوان ویرایشگر و کامپایلر `gcc`_ است.

به هر حال چون بیشتر برنامه نویسان مبانی علاقه‌مند هستند که بتوانند تمرین‌ها و پروژه‌های خود را انجام دهند در این بخش پیشنهادهایی به آنها می‌شود که به سادگی بتوانند کار خود را انجام دهند.

یکی از مسأله‌هایی که دانشجویان به آن توجه ندارند این است که نوشتن برنامه‌ها با ابزارهایی که روی رایانهٔ آنها نصب می‌شود و اغلب به کار می‌برند این است که شاید دیگران آن ابزارها را به کار نبرند و از سوی دیگر کسی که می‌خواهد برنامهٔ آنها را تحویل بگیرد نتواند آنها اجرا کند زیرا استاندارد را رعایت نکرده‌اند. بنابراین پیشنهاد می‌شود به صورت استاندارد برنامه نویسی کنند تا برنامهٔ آنها بتواند در هر جایی اجرا شود. همچنین به این توجه نمایند که در هنگام تحویل پروژه‌های‌شان بتوانند به سادگی برنامهٔ خود را بر روی رایانه‌هایی تحویل دهند که نیاز است که کامپایلر روی آنها نیست و باید در همان زمان برنامه را روی آن رایانه تغییر دهند و تحویل دهند. بنابراین پیشنهادهایی که برای نوشتن کد به کمک محیط‌های مجتمع اجرا دارم به ترتیب به قرار زیر است:

*  `orwelldevcpp <http://sourceforge.net/projects/orwelldevcpp/>`_ نسخه‌های تازه‌تری از  `DevCpp`_   است. نسخهٔ قابل حمل آن در `Portable orwelldevcpp <http://sourceforge.net/projects/orwelldevcpp/files/Portable%20Releases/>`_  گذاشته شده است.
*  `codeblocks <http://www.codeblocks.org>`_  این نرم افزار به خوبی بر روی سیستم عامل‌های گوناگون نصب می‌شود و می‌تواند کار خود را انجام دهد. در بخش `Downloads <http://www.codeblocks.org/downloads>`_  می‌توان نسخه‌‌های گوناگون آن را اجرا نمود.
*  `Ch <http://www.softintegration.com>`_ :  یکی از محیط‌های جالب یکپارچه برنامه نویسی است که شاید بهترین ویژگی آن مفسر بودن آن برای زبان C است که به خوبی مشکل‌های کار با اشاره‌گرها را گزارش می‌کند و البته بدی آن این است که پس از گزارش اخطار برای یک اشاره‌گر یا بیرون زدن از آرایه برای آن حافظه‌ای اختصاص می‌دهد تا برنامه کار خود را ادامه دهد و شاید برنامه نویس متوجه نشود که مشکلی برایش پیش آمده است.   این نرم افزار توانمند بر روی سیستم عامل‌های گوناگون اجرا می‌شود و دارای نسخه‌های گوناگونی است. نسخه‌ای که برای انجام کارهای آموزشی بسیار مناسب است ولی نمی‌توان آن را برای کارهای تجاری به کار برد نسخهٔ `student <http://www.softintegration.com/products/chstudent/>`_   آن است که همراه ویرایشگر `ChIDE <http://www.softintegration.com/docs/ch/chide/>`_  است.
*  `Qt Creator <http://qt-project.org>`_
*  `kdevelop <http://kdevelop.org>`_
*  `cbuilder <http://www.embarcadero.com/products/cbuilder>`_
*  `DevCpp <http://www.bloodshed.net/devcpp.html>`_ :   یکی از محیط‌های اجرای یکپارچه مناسب دیگر است.ولی چند سال است که به روز نشده است و البته مشکل‌هایی دارد. گمان می‌کنم پشتیبانی این نرم افزار از conio.h به دلیل استاندارد نبودن چندان خوب نیست.
*  `Visual Studio Express <http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products>`_ :  فقط برای سیستم عامل ویندوز است و البته نرم افزار سنگینی است که روی رایانه‌های قدیمی نمی‌تواند اجرا شود.
*  `xcode <https://developer.apple.com/xcode/>`_ :  فقط برای سیستم عامل‌های شرکت مکینتاش است.

پیوندها
===================================================================================================
.. class:: yoosofan-change-ltr

* `<http://www.cplusplus.com>`_
* `<http://cppreference.com>`_
* `<http://www.tutorialspoint.com/cplusplus/>`_
* https://www.learncpp.com
* https://www.studytonight.com/cpp/
* `<http://stackoverflow.com/questions/tagged/c%2b%2b>`_
* `<http://coliru.stacked-crooked.com/>`_
* `<https://github.com/fffaraz/awesome-cpp>`_
* `<http://devdocs.io/cpp/>`_
* `<https://isocpp.org/>`_
* `<https://www.includehelp.com/cpp-tutorial/>`_
* `<https://www.geeksforgeeks.org/c-plus-plus/>`_
* `<https://www.cpp.thiyagaraaj.com>`_
* `<http://www.ntu.edu.sg/home/ehchua/programming/index.html#Cpp>`_
* `<https://github.com/AnthonyCalandra/modern-cpp-features>`_
* http://eel.is/c++draft/
* https://www.fluentcpp.com/

نمونه‌ها
===================================================================================================
کلاس عدد مختلط ساده
---------------------------------------------------------------------------------------------------

.. class:: yoosofan-change-ltr

  .. code-block:: cpp

    #include<iostream>
    using namespace std;
    struct ComplexCls{
       double re, img;
       void input(void){
          cout<<"Enter real part of complex number: ";
          cin>>re;
          cout<<"Enter imaginary part of complex number: ";
          cin>>img;
       }
       void display(void){
          cout<<re<<" + i "<<img<<endl;
       }
       void init(double real, double imaginary){
          re = real;
          img= imaginary;
       }
       void Negation(void){
          re = - re ;
          img= - img;
       }
       ComplexCls Add(ComplexCls a){
          ComplexCls b;
          b.re = a.re + re ;
          b.img= a.img+ img;
          return b;
       }
    };
    int main(){
       ComplexCls x,y,z;
       x.input();
       x.display();
       y.input();
       y.display();
       z=x.Add(y);
       z.display();
       return 0;
    }


برنامه کار ساده با ماتریس
---------------------------------------------------------------------------------------------------

.. class:: yoosofan-change-ltr

  .. code-block:: cpp

    #include<iostream>
    using namespace std;
    const int n=4 , m=4;
    void transpose(int a[][m]){
       for(int i=0; i<n ; i++)
          for(int j=0 ; j<i; j++)
          {
             int temp =  a[i][j];
               a[i][j] = a[j][i];
             a[j][i] = temp;
          }

    }
    void show(int a[][m]){
       for(int i = 0 ; i< n ; i++){
          cout<<"\n";
          for(int j=0 ; j<m ; j++)
             cout<< a[i][j]<<'\t';
       }
    }

    struct Matrix{
       int a[n][m];
      void transpose(){
       for(int i=0; i<n ; i++)
          for(int j=0 ; j<i; j++)
          {
             int temp =  a[i][j];
               a[i][j] = a[j][i];
             a[j][i] = temp;
          }
    }
    void show(){
       for(int i = 0 ; i< n ; i++){
          cout<<"\n";
          for(int j=0 ; j<m ; j++)
             cout<< a[i][j]<<'\t';
       }
       cout<<endl;
    }
     void init(void){
     for(int i =0 ;i<n; i++)
      for(int j =0 ; j<m ; j++)
         a[i][j] = i*10 +j;
    }
    void input(void){
       cout<<"Enter data"<<endl;
       for(int i = 0 ; i < n; i++)
          for(int j=0 ; j<m ; j++){
              cout<<"Enter A["<<i<<"]["<<j<<"] : ";
              cin>>a[i][j];
        }
     }
    };
    int main(){
     int a[n][m];
     for(int i =0 ;i<n; i++)
      for(int j =0 ; j<m ; j++)
         a[i][j] = i*10 +j;
     show(a);
     transpose(a);
     cout << endl;
     show(a);
     int b[n][m];
     for(int i =0 ;i<n; i++)
      for(int j =0 ; j<m ; j++)
         b[i][j] = i*i +j;
      show(b);
      transpose(b);
      show(b);
      Matrix m1;
      m1.init(); // m1.input();
      m1.show();
      m1.transpose();
      m1.show();
      cout<<endl;
      Matrix m2;
      m2.init(); // m2.input();
      m2.show();
      m2.transpose();
      m2.show();
     return 0;
    }


